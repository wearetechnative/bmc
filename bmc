#!/usr/bin/env bash

function is_sourced() {
  if [ -n "$ZSH_VERSION" ]; then
    case $ZSH_EVAL_CONTEXT in *:file:*) return 0;; esac
  else  # Add additional POSIX-compatible shell names here, if needed.
    case ${0##*/} in dash|-dash|bash|-bash|ksh|-ksh|sh|-sh) return 0;; esac
  fi
  return 1  # NOT sourced.
}

is_sourced && sourced=1 || sourced=0

if [ $sourced -eq 1 ]
  thisdir="$(dirname "$(which bmc)")"
then
  thisdir="$(dirname "$0")"
fi

#echo $thisdir

# INCLUDE LIB
source "$thisdir/_bmclib.sh"

CMDS=()
DESC=()
NARGS=$#
ARG1=$1

make_command(){
  CMDS+=("$1")
  DESC+=("$2")
};

usage(){
  printf "\nUsage: %s [command]\n\nCommands:\n" $0;

  i=0
  for cmd in "${CMDS[@]}"
  do
    printf "  %-10s %-40s \n" ${cmd} "${DESC[$i]}";
    i=$((i + 1))
  done
};

runme(){
  if test $NARGS -eq 1;
  then eval "$ARG1"||usage;
  else usage;
  fi;
}

function prelude(){
  loadConfig
  # CHECK deps
  checkdeps "jsonify-aws-dotfiles"
  checkdeps "jq"
  checkdeps "awk"
  checkdeps "assumego"
  checkdeps "gum"
  deps_missing
}

function AWSProfileOrExit(){

  if [ -z $AWS_PROFILE ]
  then
    echo "This command needs AWS_PROFILE to be set. run bmc profsel"
    exit 1
  fi
}

##### PLACE YOUR COMMANDS BELOW #####

make_command "version" "Show bmc version"
version(){
  show_version
}

make_command "profsel" "Set AWS_PROFILE by sourcing this command"
profsel(){

  prelude
  selectAWSProfile
  setMFA
  if [ $sourced -eq 1 ]
  then
    export AWS_PROFILE=${selectedProfileName}
  else
    echo "Source this script or copy/paste the line below to set profile:"
    echo
    echo "  export AWS_PROFILE=${selectedProfileName}"
    echo
  fi
}

make_command "console" "Open Firefox with AWS account in console."
console(){

  prelude
  selectAWSProfile
  setMFA

  GRANTED_ALIAS_CONFIGURED="true" assumego -c $selectedProfileName
}

make_command "ec2ls" "List running ec2's."
ec2ls(){
  AWSProfileOrExit
  $thisdir/ec2ls.sh
}

make_command "ec2ssh" "ssh connect to running ec2."
ec2ssh(){
  AWSProfileOrExit
  $thisdir/ec2connect.sh
}

make_command "ecsconnect" "shell connect to ecs container."
ecsconnect(){
  AWSProfileOrExit
  $thisdir/ecsconnect.sh
}

##### PLACE YOUR COMMANDS ABOVE #####

runme
