#!/usr/bin/env bash

function is_sourced() {
   if [ -n "$ZSH_VERSION" ]; then
     case $ZSH_EVAL_CONTEXT in *:file:*) return 0;; esac
   else  # Add additional POSIX-compatible shell names here, if needed.
     case ${0##*/} in dash|-dash|bash|-bash|ksh|-ksh|sh|-sh) return 0;; esac
   fi
   return 1  # NOT sourced.
 }

is_sourced && sourced=1 || sourced=0

if [ $sourced -eq 1 ]
  thisdir="$(dirname "$1")"
then
  thisdir="$(dirname "$0")"
fi

# INCLUDE LIB
source "$thisdir/_bmclib.sh"

CMDS=()
DESC=()
NARGS=$#
ARG1=$1

make_command(){
  CMDS+=("$1")
  DESC+=("$2")
};

usage(){
  printf "\nUsage: %s [command]\n\nCommands:\n" $0;

  i=0
  for cmd in "${CMDS[@]}"
  do
    printf "  %-10s %-40s \n" ${cmd} "${DESC[$i]}";
    i=$((i + 1))
  done
};

runme(){
  if test $NARGS -eq 1;
  then eval "$ARG1"||usage;
  else usage;
  fi;
}

##### PLACE YOUR COMMANDS BELOW #####

make_command "version" "Show bmc version"
version(){
  show_version
}

make_command "cli" "Set AWS_PROFILE by sourcing this command"
cli(){

  checkdeps "jsonify-aws-dotfiles"
  checkdeps "jq"
  checkdeps "aws"
  checkdeps "gum"
  checkdeps "aws-mfa"
  deps_missing

  echo $MISSING_DEPS

  checkOS
  selectAWSProfile
  setDates
  setMFA
  export AWS_PROFILE=${selectedProfileName}
}

make_command "console" "Open account in AWS console."
console(){

  # CHECK deps
  loadConfig
  checkdeps "jsonify-aws-dotfiles"
  checkdeps "jq"
  checkdeps "awk"
  checkdeps "assumego"
  checkdeps "gum"
  deps_missing

  checkOS
  selectAWSProfile
  setDates
  setMFA

  GRANTED_ALIAS_CONFIGURED="true" assumego -c $selectedProfileName
}

##### PLACE YOUR COMMANDS ABOVE #####

runme
